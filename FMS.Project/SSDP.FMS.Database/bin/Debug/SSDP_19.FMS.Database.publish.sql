/*
Deployment script for FMS_Database

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "FMS_Database"
:setvar DefaultFilePrefix "FMS_Database"
:setvar DefaultDataPath "C:\Users\zshar\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\zshar\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [dbo].[ServiceRequest].[RequestCreatorID] on table [dbo].[ServiceRequest] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[ServiceRequest])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Altering Table [dbo].[ServiceRequest]...';


GO
ALTER TABLE [dbo].[ServiceRequest] ALTER COLUMN [RequestCloseDate] DATE NULL;


GO
ALTER TABLE [dbo].[ServiceRequest]
    ADD [RequestCreatorID] INT NOT NULL;


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[ServiceRequest]...';


GO
ALTER TABLE [dbo].[ServiceRequest]
    ADD DEFAULT 1 FOR [RequiestStatus];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[ServiceRequest]...';


GO
ALTER TABLE [dbo].[ServiceRequest]
    ADD DEFAULT 0 FOR [RequestHandlingStatus];


GO
PRINT N'Creating Foreign Key [dbo].[FK_ServiceRequest_Beneficiary]...';


GO
ALTER TABLE [dbo].[ServiceRequest] WITH NOCHECK
    ADD CONSTRAINT [FK_ServiceRequest_Beneficiary] FOREIGN KEY ([RequestCreatorID]) REFERENCES [dbo].[Beneficiary] ([BeneficiaryID]);


GO
PRINT N'Creating View [dbo].[View_BuildingAndLocationInfo]...';


GO
CREATE VIEW [dbo].[View_BuildingAndLocationInfo]
	AS SELECT [dbo].[Building].[BuildingID], [dbo].[Building].[NoFloors],
	[dbo].[Building].[Ownership], [dbo].[Building].[BuildingManagerID],
	[dbo].[Location].[City] FROM dbo.Building Left JOIN dbo.Location on dbo.Building.LocationID = dbo.Location.LocationID
GO
PRINT N'Creating Procedure [dbo].[SP_AssignWorkerToRequest]...';


GO
CREATE PROCEDURE [dbo].[SP_AssignWorkerToRequest]
	@WorkerID INT,
	@RequestID INT
AS
	Update dbo.ServiceRequest SET AssignedWorkerID = @WorkerID 
	WHERE dbo.ServiceRequest.ServiceRequestID = @RequestID
GO
PRINT N'Creating Procedure [dbo].[SP_GetAllServiceRequests]...';


GO
CREATE PROCEDURE [dbo].[SP_GetAllServiceRequests]
AS
	SELECT Req.ServiceRequestID, 
	Ben.Username,
	Special.SpecializationName, 
	Req.ServiceDescribtion, 
	BuildingInfo.BuildingID, 
	BuildingInfo.City, 
	BuildingInfo.NoFloors, 
	BuildingInfo.BuildingManagerID,
	Req.RequiestStatus,
	Req.RequestHandlingStatus,
	Req.RequestIssueDate,
	Req.RequestCloseDate 
	from dbo.ServiceRequest AS Req LEFT JOIN dbo.Specialization AS Special on Req.SpecializationID = Special.SpecializationID
	LEFT JOIN dbo.Beneficiary AS Ben ON Req.RequestCreatorID = Ben.BeneficiaryID
	LEFT JOIN dbo.View_BuildingAndLocationInfo AS BuildingInfo ON BuildingInfo.BuildingID = Req.BuildingID
	-- Building Location {x} 
	-- Creator Username {x}
	-- Specialization Name {x}
GO
PRINT N'Creating Procedure [dbo].[SP_HandleServiceRequestByWorker]...';


GO
CREATE PROCEDURE [dbo].[SP_HandleServiceRequestByWorker]
	@BuildingNo INT,
	@RequestID INT
AS
	UPDATE dbo.ServiceRequest SET RequestHandlingStatus = 1 
	WHERE dbo.ServiceRequest.ServiceRequestID = @RequestID
GO
PRINT N'Creating Procedure [dbo].[SP_InsertNewServiceRequiest]...';


GO
CREATE PROCEDURE [dbo].[SP_InsertNewServiceRequiest]
	@BuildinNo INT,
	@Specialization INT,
	@Describtion nchar(100),
	@CreatorID INT
AS
	IF NOT EXISTS (SELECT 1 from dbo.ServiceRequest where dbo.ServiceRequest.BuildingID = @BuildinNo AND dbo.ServiceRequest.SpecializationID = @Specialization AND dbo.ServiceRequest.RequiestStatus = 1)
		BEGIN
			INSERT INTO dbo.ServiceRequest(BuildingID, SpecializationID, ServiceDescribtion,RequestCreatorID)
			Values (@BuildinNo, @Specialization, @Describtion, @CreatorID);
			SELECT 1;
		END
	ELSE
		BEGIN
			SELECT 0;
		END
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[ServiceRequest] WITH CHECK CHECK CONSTRAINT [FK_ServiceRequest_Beneficiary];


GO
PRINT N'Update complete.';


GO
