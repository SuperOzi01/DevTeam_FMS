/*
Deployment script for FMS_Database

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "FMS_Database"
:setvar DefaultFilePrefix "FMS_Database"
:setvar DefaultDataPath "C:\Users\zshar\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\zshar\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_Building_Location]...';


GO
ALTER TABLE [dbo].[Building] DROP CONSTRAINT [FK_Building_Location];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_Building_CompanyEmployee]...';


GO
ALTER TABLE [dbo].[Building] DROP CONSTRAINT [FK_Building_CompanyEmployee];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_Beneficiary_Building]...';


GO
ALTER TABLE [dbo].[Beneficiary] DROP CONSTRAINT [FK_Beneficiary_Building];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_ServiceRequest_Building]...';


GO
ALTER TABLE [dbo].[ServiceRequest] DROP CONSTRAINT [FK_ServiceRequest_Building];


GO
PRINT N'Starting rebuilding table [dbo].[Building]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Building] (
    [BuildingID]        INT NOT NULL,
    [NoFloors]          INT NOT NULL,
    [Ownership]         INT NOT NULL,
    [BuildingManagerID] INT NOT NULL,
    [LocationID]        INT NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Building1] PRIMARY KEY CLUSTERED ([BuildingID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Building])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Building] ([BuildingID], [NoFloors], [Ownership], [BuildingManagerID], [LocationID])
        SELECT   [BuildingID],
                 [NoFloors],
                 [Ownership],
                 [BuildingManagerID],
                 [LocationID]
        FROM     [dbo].[Building]
        ORDER BY [BuildingID] ASC;
    END

DROP TABLE [dbo].[Building];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Building]', N'Building';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Building1]', N'PK_Building', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating Foreign Key [dbo].[FK_Building_Location]...';


GO
ALTER TABLE [dbo].[Building] WITH NOCHECK
    ADD CONSTRAINT [FK_Building_Location] FOREIGN KEY ([LocationID]) REFERENCES [dbo].[Location] ([LocationID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Building_CompanyEmployee]...';


GO
ALTER TABLE [dbo].[Building] WITH NOCHECK
    ADD CONSTRAINT [FK_Building_CompanyEmployee] FOREIGN KEY ([BuildingManagerID]) REFERENCES [dbo].[CompanyEmployee] ([EmployeeID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Beneficiary_Building]...';


GO
ALTER TABLE [dbo].[Beneficiary] WITH NOCHECK
    ADD CONSTRAINT [FK_Beneficiary_Building] FOREIGN KEY ([Building_BuildingID]) REFERENCES [dbo].[Building] ([BuildingID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_ServiceRequest_Building]...';


GO
ALTER TABLE [dbo].[ServiceRequest] WITH NOCHECK
    ADD CONSTRAINT [FK_ServiceRequest_Building] FOREIGN KEY ([BuildingID]) REFERENCES [dbo].[Building] ([BuildingID]);


GO
PRINT N'Refreshing View [dbo].[View_BuildingAndLocationInfo]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[View_BuildingAndLocationInfo]';


GO
PRINT N'Altering Procedure [dbo].[SP_AddBuilding]...';


GO
ALTER PROCEDURE [dbo].[SP_AddBuilding]
	@BuildingID INT,
	@NoFloors INT,
	@Ownership INT, 
	@ManagerID INT, 
	@LocationID INT
AS
	INSERT INTO dbo.Building( BuildingID,NoFloors, Ownership, BuildingManagerID, LocationID)
	VALUES (@BuildingID, @NoFloors, @Ownership, @ManagerID, @LocationID)
	Select 1;
GO
PRINT N'Refreshing Procedure [dbo].[SP_GetAllBuildings]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[SP_GetAllBuildings]';


GO
PRINT N'Refreshing Procedure [dbo].[SP_GetAllServiceRequests]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[SP_GetAllServiceRequests]';


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Building] WITH CHECK CHECK CONSTRAINT [FK_Building_Location];

ALTER TABLE [dbo].[Building] WITH CHECK CHECK CONSTRAINT [FK_Building_CompanyEmployee];

ALTER TABLE [dbo].[Beneficiary] WITH CHECK CHECK CONSTRAINT [FK_Beneficiary_Building];

ALTER TABLE [dbo].[ServiceRequest] WITH CHECK CHECK CONSTRAINT [FK_ServiceRequest_Building];


GO
PRINT N'Update complete.';


GO
